AWSTemplateFormatVersion: '2010-09-09'
Description: '(qs-1nltbq5f8) OpenShift, License: Apache 2.0 (Please do not remove)
  April, 6, 2018
  Deploys an OpenShift cluster into a new VPC'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - AvailabilityZones
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
          - RemoteAccessCIDR
          - ContainerAccessCIDR
          - NumberOfAZs
      - Label:
          default: DNS Configuration
        Parameters:
          - DomainName
          - HostedZoneID
          - SubDomainPrefix
          - CertificateArn
          - ClusterIngressPrivateKeySecretName
          - ClusterIngressCertificateArn
          - EnableSSLCertificateGeneration
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - AmiId
      - Label:
          default: OpenShift Hosts Configuration
        Parameters:
          - NumberOfMaster
          - NumberOfNodes
          - MasterInstanceType
          - NodesInstanceType
          - SSHKey
      - Label:
          default: OpenShift Configuration
        Parameters:
          - OpenshiftContainerPlatformVersion
          - ClusterName
      - Label:
          default: OpenShift v4 Configuration
        Parameters:
          - PullSecret
          - MasterInstanceProfileName
          - WorkerInstanceProfileName
      - Label:
          default: OpenShift v3 Configuration
        Parameters:
          - OpenshiftContainerPlatformVersion
          - AWSServiceBroker
          - HawkularMetrics
          - AnsibleFromGit
          - GlusterFS
          - GlusterStorageSize
          - GlusterStorageType
          - GlusterStorageIops
          - GlusterStorageEncrypted
          - GlusterInstanceType
          - NumberOfGluster
          - AutomationBroker
          - ClusterConsole
          - NumberOfEtcd
          - EtcdInstanceType
          - OpenShiftAdminPassword
      - Label:
          default: OpenShift v3 Red Hat Subscription Information
        Parameters:
          - RedhatSubscriptionUserName
          - RedhatSubscriptionPassword
          - RedhatSubscriptionPoolID
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      MasterInstanceProfileName:
        default: Master IAM Instance Profile Name
      WorkerInstanceProfileName:
        default: Worker IAM Instance Profile Name
      AmiId:
        default: AMI ID
      KeyPairName:
        default: SSH Key Name
      SSHKey:
        default: SSH Public Key
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private Subnet 3 CIDR
      PublicSubnet1CIDR:
        default: Public Subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public Subnet 2 CIDR
      PublicSubnet3CIDR:
        default: Public Subnet 3 CIDR
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      QSS3BucketRegion:
        default: Quick Start S3 Bucket Region
      RemoteAccessCIDR:
        default: Allowed External Access CIDR (OCP UI)
      ContainerAccessCIDR:
        default: Allowed External Access CIDR (OCP Router)
      VPCCIDR:
        default: VPC CIDR
      OpenShiftAdminPassword:
        default: OpenShift UI Password
      RedhatSubscriptionUserName:
        default: Red Hat Subscription User Name
      RedhatSubscriptionPassword:
        default: Red Hat Subscription Password
      RedhatSubscriptionPoolID:
        default: Red Hat Pool ID
      OpenshiftContainerPlatformVersion:
        default: Openshift Container Platform Version
      MasterInstanceType:
        default: Master Instance Type
      EtcdInstanceType:
        default: Etcd Instance Type
      NodesInstanceType:
        default: Nodes Instance Type
      NumberOfMaster:
        default: Number of Masters
      NumberOfEtcd:
        default: Number of Etcds
      NumberOfNodes:
        default: Number of Nodes
      AWSServiceBroker:
        default: AWS Service Broker
      HawkularMetrics:
        default: Hawkular Metrics
      DomainName:
        default: Domain Name
      HostedZoneID:
        default: Route 53 Hosted Zone ID
      SubDomainPrefix:
        default: Subdomain Prefix
      CertificateArn:
        default: Certificate ARN
      GlusterFS:
        default: GlusterFS
      GlusterStorageSize:
        default: Gluster Storage Size
      GlusterStorageType:
        default: Gluster EBS volume type
      GlusterInstanceType:
        default: Gluster Instance Type
      NumberOfGluster:
        default: Number of Gluster Hosts
      GlusterStorageIops:
        default: Gluster Storage Iops
      GlusterStorageEncrypted:
        default: Gluster Storage Encrypted
      AutomationBroker:
        default: OpenSift Automation Broker
      AvailabilityZones:
        default: Availability Zones
      AnsibleFromGit:
        default: Get Ansible from Git
      ClusterName:
        default: Cluster Name
      ClusterConsole:
        default: Enable the cluster console (Requires OpenShift 3.11)
      NumberOfAZs:
        default: Number of Availability Zones
      ClusterIngressPrivateKeySecretName:
        default: Cluster Ingress Private Key Secret Name
      ClusterIngressCertificateArn:
        default: Cluster Ingress Certificate ARN
      EnableSSLCertificateGeneration:
        default: Enable SSL Certificate Generation?
Parameters:
  EnableSSLCertificateGeneration:
    Description: Activates automatic SSL Certificate generation through ACM. Uses DNS or Email depending on available options
    Type: String
    Default: "yes"
    AllowedValues: [ "yes", "no" ]
  ClusterIngressPrivateKeySecretName:
    Description: >-
      AWS Secrets Manager name for the SSL Private Key for the Cluster Ingress certificate in ACM.
      If provided, Quickstart will load your Certificate and Key into the OpenShift cluster. Secret
      value must be PEM encoded.
    Type: String
    Default: ''
  ClusterIngressCertificateArn:
    Description: >-
      Optional ACM ARN for a SSL Certificate to import into the default OpenShift ingress.
      Must be certificate signed for your cluster's wildcard domain. Requires `ClusterIngressPrivateKeySecretName`
    Type: String
    Default: ''
  MasterInstanceProfileName:
    Description: >-
      Optional: Provide an IAM Instance profile name to use for control plane nodes.
      If unprovided, OpenShift will configure a new IAM Instance Profile for you
    Type: String
    Default: ''
  WorkerInstanceProfileName:
    Description: >-
      Optional: Provide an IAM Instance profile name to use for worker nodes.
      If unprovided, OpenShift will configure a new IAM Instance Profile for you
    Type: String
    Default: ''
  PullSecret:
    Description: >-
      Required for OpenShift v4: The OCP Pull Secret JSON
    Type: String
    NoEcho: 'true'
    Default: xxxxxxxx
  SSHKey:
    Description: The public key to be added to the CoreOS boxes for ssh access.
    Default: ""
    Type: String
  NumberOfAZs:
    Default: 3
    Description: >-
      The number of Availability Zones to be used for the deployment. 3 Availability Zones are needed to avoid
      a single point of failure when using 3 or more master nodes or etcd nodes.
    Type: Number
    AllowedValues:
    - 1
    - 3
  AmiId:
    Description: >-
      OPTIONAL: bring your own AMI. In Enterprise environment, you might
      need to bring your own AMI (with proxy, softwares, ...).
      If the AMI is encrypted, keep in mind that the key policy should allow use of
      the key from AWSServiceRoleForAutoScaling.
      If left blank, we'll use the base RHEL image from your region.
    Type: String
    Default: ""
  AvailabilityZones:
    Description: List of Availability Zones to use for the subnets in the VPC. Three
      Availability Zones are used for this deployment, and the logical order of your
      selections is preserved.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  KeyPairName:
    Description: (OS v3 only. Use SSHKey Parameter for OS v4) The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches
    Type: String
    Default: ""
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 3
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR block for the public (DMZ) subnet 1 located in Availability
      Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 2
    Type: String
  PublicSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.160.0/20
    Description: CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 3
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-redhat-openshift-4.3-preview/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. When using your own bucket, you must specify this value.
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances We recommend
      that you set this value to a trusted IP range.
    Type: String
  ContainerAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances We recommend
      that you set this value to a trusted IP range.
    Type: String
  OpenShiftAdminPassword:
    Description: (Optional for OS v4) Password for OpenShift Admin UI Must be at least 8 and no more than
      12 characters containing letters and (minimum 1 capital letter), numbers and
      symbols
    Type: String
    MinLength: '8'
    AllowedPattern: ^[^ \\']+$
    NoEcho: 'true'
    Default: 'xxxxxxxx'
  RedhatSubscriptionUserName:
    Description: (Required for OS v3) Enter Redhat RHN User Name
    Type: String
    Default: ''
  RedhatSubscriptionPassword:
    NoEcho: 'true'
    Description: (Required for OS v3) Enter Redhat RHN Password
    Type: String
    Default: ''
  RedhatSubscriptionPoolID:
    Description: (Required for OS v3) Enter Redhat RHN PoolID
    Type: String
    Default: ''
  OpenshiftContainerPlatformVersion:
    Description: OpenShift version to deploy
    Default: '4.3'
    Type: String
    AllowedValues: [ '3.11', '4.3' ]
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  MasterInstanceType:
    Default: m5.xlarge
    Type: String
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Master instances
  EtcdInstanceType:
    Default: m5.xlarge
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - t2.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Etcd instances
    Type: String
  NodesInstanceType:
    Default: m5.xlarge
    AllowedValues:
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Node instances
    Type: String
  NumberOfMaster:
    Default: '3'
    Description: This Deployment requires at least 3 OpenShift Master instances
    Type: String
    AllowedPattern: '^[3579]$|(^[1-9]+[13579]$)'
  NumberOfEtcd:
    Default: '3'
    Description: This Deployment requires at least 3 OpenShift Etcd instances
    Type: String
    AllowedPattern: '^[3579]$|(^[1-9]+[13579]$)'
  NumberOfNodes:
    Default: '3'
    Description: The desired capacity for the OpenShift node instances
    Type: Number
  AWSServiceBroker:
    Default: Enabled
    Description: Enable the AWS Service Broker
    Type: String
    AllowedValues: [ Enabled, Disabled ]
  HostedZoneID:
    Description: 'OPTIONAL: Route 53 Hosted Zone ID to use. If left blank route 53
      will not be configured and DNS must be setup manually If you specify this you must also specify DomainName'
    Type: String
    Default: ""
  DomainName:
    Description: >-
      OPTIONAL: domain name configured for the cluster, if left blank self signed
      certificates will be used for TLS and the LoadBalancer's auto-generated hostname
      will be used for connections from outside the cluster.
    Type: String
    Default: ""
  SubDomainPrefix:
    Default: ''
    Description: 'OPTIONAL: Subdomain to use, if left blank DomainName will be used
      without a prefix. If you specify this you must also specify DomainName and HostedZoneID'
    Type: String
  CertificateArn:
    Description: >-
      OPTIONAL: Specify the ACM arn of the certificate for OpenShift applications. Must be
      valid for *.apps.${ClusterName}.${DomainName}. Example: *.apps.my-cluster.example.com
    Type: String
    Default: ""
  HawkularMetrics:
    Default: Enabled
    Description: Enable Hawkular cluster metrics
    Type: String
    AllowedValues: [ Enabled, Disabled ]
  GlusterFS:
    Default: Disabled
    Description: Enable GlusterFS storage cluster
    Type: String
    AllowedValues:
      - Enabled
      - Disabled
  GlusterStorageSize:
    Description: Size in GB of the available storage (will create 3x ebs volumes of this size)
    Type: Number
    Default: 1000
  GlusterStorageType:
    Default: io1
    Description: EBS volume type to use for storage
    Type: String
    AllowedValues:
      - io1
      - gp2
      - st1
  GlusterInstanceType:
    Default: i3.large
    AllowedValues:
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
    ConstraintDescription: Must contain valid instance type
    Description: Type of EC2 instance for the Node instances
    Type: String
  NumberOfGluster:
    Default: '3'
    Description: This Deployment requires a minimum of 3 Gluster instances
    Type: Number
    AllowedValues:
      - '3'
  GlusterStorageIops:
    Default: 3000
    Description: EBS volume IOPS to allocate (only applicable if io1 has been selected for GlusterStorageType)
    Type: Number
  GlusterStorageEncrypted:
    Default: 'False'
    Description: Enable EBS encryption for Gluster storage volumes
    Type: String
    AllowedValues:
      - 'False'
      - 'True'
  AutomationBroker:
    Default: Enabled
    Description: Enable the OpenShift Automation Service Broker
    Type: String
    AllowedValues: [ Enabled, Disabled ]
  AnsibleFromGit:
    Default: "False"
    Description: Get openshift installer playbooks from GitHub. By default, they come from RPM.
    Type: String
    AllowedValues:
      - "True"
      - "False"
  ClusterName:
    Default: ""
    Description: Custom cluster name for kubernetes.io/cluster/ tags, if left blank will use the stackname suffixed with the region
    Type: String
  ClusterConsole:
    Default: Enabled
    Description: Enable the Cluster Console
    Type: String
    AllowedValues: [ Enabled, Disabled ]
Resources:
  #
  # Generates an S3 Bucket for OpenShift to back its container image registry
  #
  RegistryBucket:
    Type: AWS::S3::Bucket
  #
  # This will clean up the contents of the Image Registry Bucket so CloudFormation can delete it
  #
  DeleteRegistryBucketContents:
    Type: Custom::DeleteBucketContents
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt CustomLambdaStack.Outputs.DeleteBucketContentsLambdaArn
      Bucket: !Ref 'RegistryBucket'
  OpenShiftLogGroup:
    Type: 'AWS::Logs::LogGroup'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      RetentionInDays: 7
  #
  # Creates the DNS Zone and subdomain (if required)
  #
  DNSZoneStack:
    Type: AWS::CloudFormation::Stack
    Condition: SetupSubdomain
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/common/dns.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        HostedZoneID: !Ref HostedZoneID
        DomainName: !Ref DomainName
        SubDomainPrefix: !Ref SubDomainPrefix
  #
  # Creates the VPC Network for the cluster
  #
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join [ ',', !Ref 'AvailabilityZones' ]
        NumberOfAZs: '3'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2CIDR'
        PrivateSubnet3ACIDR: !Ref 'PrivateSubnet3CIDR'
        PrivateSubnetATag2: !If
          - OS3
          - !If
            - CustomClusterName
            - !Sub "kubernetes.io/cluster/${ClusterName}=owned"
            - !Sub "kubernetes.io/cluster/${AWS::StackName}-${AWS::Region}=owned"
          - !Ref AWS::NoValue
        PrivateSubnetATag3: !If
          - OS3
          - "kubernetes.io/role/internal-elb="
          - !Ref AWS::NoValue
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        PublicSubnet3CIDR: !Ref 'PublicSubnet3CIDR'
        PublicSubnetTag2: !If
          - OS3
          - !If
            - CustomClusterName
            - !Sub "kubernetes.io/cluster/${ClusterName}=owned"
            - !Sub "kubernetes.io/cluster/${AWS::StackName}-${AWS::Region}=owned"
          - !Ref AWS::NoValue
        PublicSubnetTag3: "kubernetes.io/role/elb="
        VPCCIDR: !Ref 'VPCCIDR'
  #
  # SSL Certificate management
  #
  # Either created through ACM or bring your own ARN
  SSLCertificateStack:
    Type: AWS::CloudFormation::Stack
    Condition: EnableSSLGeneration
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/common/ssl_certificate.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        Route53HostedSubdomainZone: !If
          - SetupSubdomain
          - !GetAtt DNSZoneStack.Outputs.Route53HostedSubdomainZone
          - !Ref HostedZoneID
        ACMCertificateLambdaArn: !If
          - SetupRoute53
          - !GetAtt CustomLambdaStack.Outputs.ACMCertificateLambdaArn
          - ""
        ClusterName: !Ref ClusterName
        HostedZoneID: !Ref HostedZoneID
        CertificateArn: !Ref CertificateArn
        DomainName: !Ref DomainName
        SubDomainPrefix: !Ref SubDomainPrefix
  #
  # Custom Resource definitions
  #
  # Creates a set of custom resources definitions
  #
  CustomLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/common/custom_lambda.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        HostedZoneID: !Ref HostedZoneID
        Route53HostedSubdomainZone: !If
          - SetupSubdomain
          - !GetAtt DNSZoneStack.Outputs.Route53HostedSubdomainZone
          - !Ref HostedZoneID
        DomainName: !Ref DomainName
        SubDomainPrefix: !Ref SubDomainPrefix
        RegistryBucket: !Ref RegistryBucket
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
  OpenShift4:
    Type: AWS::CloudFormation::Stack
    Condition: OS4
    DependsOn: CustomLambdaStack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openshift4/os4.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        # CloudFormation Meta
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        # Cluster Configuration
        OpenshiftContainerPlatformVersion: !Ref 'OpenshiftContainerPlatformVersion'
        AmiId: !Ref AmiId
        OpenShiftMirrorURL: !FindInMap
          - OpenShiftVersion
          - !Ref OpenshiftContainerPlatformVersion
          -  OpenShiftMirrorURL
        OpenShiftVersion: !FindInMap
          - OpenShiftVersion
          - !Ref OpenshiftContainerPlatformVersion
          -  OpenShiftVersionNum
        OpenShiftClientBinary: !FindInMap
          - OpenShiftVersion
          - !Ref OpenshiftContainerPlatformVersion
          - OpenShiftClientBinary
        OpenShiftInstallBinary: !FindInMap
          - OpenShiftVersion
          - !Ref OpenshiftContainerPlatformVersion
          -  OpenShiftInstallBinary
        SSHKey: !Ref SSHKey
        PullSecret: !If
          - EmptyPullSecret
          - ""
          - !Ref PullSecret
        ClusterIngressPrivateKeySecretName: !Ref ClusterIngressPrivateKeySecretName
        ClusterIngressCertificateArn: !Ref ClusterIngressCertificateArn
        MasterInstanceProfileName: !Ref MasterInstanceProfileName
        WorkerInstanceProfileName: !Ref WorkerInstanceProfileName
        NumberOfNodes: !Ref NumberOfNodes
        MasterInstanceType: !Ref 'MasterInstanceType'
        NodesInstanceType: !Ref 'NodesInstanceType'
        ClusterName: !If
        - CustomClusterName
        - !Ref ClusterName
        - !Sub '${AWS::StackName}-${AWS::Region}'
        # Network Configuration
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        ContainerAccessCIDR: !Ref ContainerAccessCIDR
        VPCCIDR: !GetAtt 'VPCStack.Outputs.VPCCIDR'
        HostedZoneName: !Join
          - ''
          - - !If
              - SetupSubdomain
              - !Sub '${SubDomainPrefix}.'
              - ''
            - !Ref 'DomainName'
        HostedZoneID: !If
          - SetupSubdomain
          - !GetAtt DNSZoneStack.Outputs.Route53HostedSubdomainZone
          - !Ref 'HostedZoneID'
        PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        PrivateSubnet3ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet3AID'
        PublicSubnet3ID: !GetAtt 'VPCStack.Outputs.PublicSubnet3ID'
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        SSLCertificateId: !If
          - UseCustomCertificate
          - !Ref 'CertificateArn'
          - !If
            - EnableSSLGeneration
            - !If
              - SetupRoute53
              - !GetAtt SSLCertificateStack.Outputs.ACMCertificateDNSArn
              - !GetAtt SSLCertificateStack.Outputs.ACMCertificateEmail
            - !Ref AWS::NoValue
        AvailabilityZones: !Join
          - ","
          - !Ref AvailabilityZones
  OpenShift3:
    Type: AWS::CloudFormation::Stack
    Condition: OS3
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/openshift3/os3.template.yaml'
        - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        # CloudFormation Meta
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        # Cluster Management
        AnsibleStorageSize: '10'
        AnsibleFromGit: !Ref 'AnsibleFromGit'
        AnsibleSubnetID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        KeyPairName: !Ref 'KeyPairName'
        RedhatSubscriptionUserName: !Ref 'RedhatSubscriptionUserName'
        RedhatSubscriptionPassword: !Ref 'RedhatSubscriptionPassword'
        RedhatSubscriptionPoolID: !Ref 'RedhatSubscriptionPoolID'
        # Cluster Config
        OpenshiftContainerPlatformVersion: !Ref 'OpenshiftContainerPlatformVersion'
        AmiId: !Ref AmiId
        NumberOfMaster: !Ref NumberOfMaster
        NumberOfEtcd: !Ref NumberOfEtcd
        NumberOfNodes: !Ref NumberOfNodes
        NumberOfGluster: !Ref NumberOfGluster
        MasterInstanceType: !Ref 'MasterInstanceType'
        NodesInstanceType: !Ref 'NodesInstanceType'
        EtcdInstanceType: !Ref 'EtcdInstanceType'
        ClusterName: !If
        - CustomClusterName
        - !Ref ClusterName
        - !Sub '${AWS::StackName}-${AWS::Region}'
        GlusterStorageEncrypted: !Ref GlusterStorageEncrypted
        GlusterStorageIops: !Ref GlusterStorageIops
        GlusterInstanceType: !Ref GlusterInstanceType
        GlusterStorageType: !Ref GlusterStorageType
        GlusterStorageSize: !Ref GlusterStorageSize
        GlusterFS: !Ref GlusterFS
        AutomationBroker: !Ref AutomationBroker
        ClusterConsole: !Ref ClusterConsole
        AWSServiceBroker: !Ref 'AWSServiceBroker'
        RegistryBucket: !Ref RegistryBucket
        RegistryBucketArn: !GetAtt RegistryBucket.Arn
        # Network Configuration
        VPCCIDR: !GetAtt 'VPCStack.Outputs.VPCCIDR'
        PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        PrivateSubnet3ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet3AID'
        PublicSubnet3ID: !GetAtt 'VPCStack.Outputs.PublicSubnet3ID'
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        ContainerAccessCIDR: !Ref ContainerAccessCIDR
        NumberOfAZs: !Ref NumberOfAZs
        # DNS / Certificate Config
        DomainName: !Ref DomainName
        HostedZoneID: !If
          - SetupSubdomain
          - !GetAtt DNSZoneStack.Outputs.Route53HostedSubdomainZone
          - !Ref 'HostedZoneID'
        CertificateArn: !If
          - UseCustomDomain
          - !If
            - UseCustomCertificate
            - !Ref 'CertificateArn'
            - !If
              - SetupRoute53
              - !GetAtt SSLCertificateStack.Outputs.ACMCertificateDNSArn
              - !GetAtt SSLCertificateStack.Outputs.ACMCertificateEmail
          - !Ref AWS::NoValue
        # Custom Resource Lambdas
        KeyGenLambdaArn: !GetAtt CustomLambdaStack.Outputs.KeyGenLambdaArn
        UnSubscribeLambdaArn: !GetAtt CustomLambdaStack.Outputs.UnSubscribeLambdaArn
        CleanupPVLambdaArn: !GetAtt CustomLambdaStack.Outputs.CleanupPVLambdaArn
        # OpenShift Config
        OpenShiftAdminPassword: !If
          - EmptyOpenShiftAdminPassword
          - ""
          - !Ref OpenShiftAdminPassword
        # Monitoring
        HawkularMetrics: !Ref 'HawkularMetrics'
        OpenShiftLogGroup: !Ref OpenShiftLogGroup
Conditions:
  EmptyPullSecret: !Equals
    - !Ref PullSecret
    - xxxxxxxx
  EmptyOpenShiftAdminPassword: !Equals
    - !Ref OpenShiftAdminPassword
    - xxxxxxxx
  CustomClusterName: !Not
    - !Equals
      - !Ref ClusterName
      - ""
  OS4:
    !Or [ !Equals [!Ref OpenshiftContainerPlatformVersion, '4.2'], !Equals [!Ref OpenshiftContainerPlatformVersion, '4.3']]
  OS3: !Equals [!Ref OpenshiftContainerPlatformVersion, '3.11']
  UseCustomDomain: !And
    - !Not
      - !Equals
        - !Ref 'DomainName'
        - ''
    - Condition: EnableSSLGeneration
  UseCustomCertificate: !Not
    - !Equals
      - !Ref 'CertificateArn'
      - ''
  SetupRoute53: !And
    - !Not
      - !Equals
        - !Ref 'HostedZoneID'
        - ''
    - !Not
      - !Equals
        - !Ref 'DomainName'
        - ''
  SetupSubdomain: !And
    - !Not
      - !Equals
        - !Ref 'SubDomainPrefix'
        - ''
    - !Not
      - !Equals
        - !Ref 'HostedZoneID'
        - ''
    - !Not
      - !Equals
        - !Ref 'DomainName'
        - ''
  EnableSSLGeneration: !Equals
    - !Ref EnableSSLCertificateGeneration
    - "yes"
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Mappings:
  OpenShiftVersion:
    "3.11":
      OpenShiftMirrorURL: ""
      OpenShiftVersionNum: "3"
      OpenShiftInstallBinary: ""
      OpenShiftClientBinary: ""
    "4.3":
      OpenShiftMirrorURL:  "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/"
      OpenShiftVersionNum: "4.3.21"
      OpenShiftInstallBinary: "openshift-install"
      OpenShiftClientBinary: "openshift-client"
Outputs:
  OpenShiftUI:
    Description: The URL OpenShiftUI
    Value: !If
      - OS3
      - !GetAtt OpenShift3.Outputs.OpenShiftUI
      - !If
        - OS4
        - !GetAtt OpenShift4.Outputs.OpenShiftUI
        - ""
  ContainerAccessELBName:
    Condition: OS3
    Description: Use this ELB to expose ports to the internet
    Value: !GetAtt OpenShift3.Outputs.ContainerAccessELB